(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{156:function(t,i,e){"use strict";e.r(i);var r=e(0),a=Object(r.a)({},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("div",{staticClass:"content"},[t._m(0),e("p",[e("a",{attrs:{href:"https://learngitbranching.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("git教程"),e("OutboundLink")],1)]),t._m(1),e("p",[t._v("初始化一个Git仓库。")]),t._m(2),e("p",[t._v("把文件添加到暂存区。")]),t._m(3),e("p",[t._v("哪些文件被修改过。")]),t._m(4),e("p",[t._v("可以查看修改内容。")]),t._m(5),e("p",[t._v("提交暂存区的修改。")]),t._m(6),e("p",[t._v("提交仓库时添加的备注信息。")]),t._m(7),e("p",[t._v("从最近到最远的提交日志。")]),e("p",[t._v("git log --graph  命令可以看到分支合并图")]),t._m(8),e("p",[t._v("git reset HEAD~1 ===>（等价于） git reset --hard HEAD^   取消上一次提交")]),e("p",[t._v("git revert 撤销远程库提交，恢复上次提交记录")]),t._m(9),e("p",[t._v("git branch  命令会列出所有分支，当前分支前面会标一个*号")]),e("p",[t._v("git branch ${分支名}  创建分支")]),e("p",[t._v("git branch -d ${分支名}  删除分支")]),e("p",[t._v("git branch -D ${分支名}  强行删除分支（未合并的分支）")]),e("p",[t._v("git branch --set-upstream-to=origin/dev dev  指定本地dev分支与远程origin/dev分支的链接")]),e("p",[t._v("git branch -f master HEAD~3  会将 master 分支强制指向 HEAD 的第 3 级父提交")]),e("p",[t._v("git branch -u origin/master foo   这样 foo 就会跟踪 origin/master 了。如果当前就在 foo 分支上, 还可以省略 foo： git branch -u origin/master")]),t._m(10),e("p",[t._v("git checkout -- ${file}  让这个文件回到最近一次git commit或git add时的状态。")]),e("p",[t._v("git checkout ${分支名}  切换分支")]),e("p",[t._v("git checkout ${哈希值}  将HEAD指向提交记录哈希值（在git中移动）")]),e("p",[t._v("git checkout -b ${your-branch-name}  创建并切换分支")]),e("p",[t._v("git checkout -b dev origin/dev  创建远程origin的dev分支到本地")]),e("p",[t._v("git checkout master^  相对引用，切换到master的父节点")]),e("p",[t._v("git checkout -b totallyNotMaster origin/master  就可以创建一个名为 totallyNotMaster 的分支，它跟踪远程分支 origin/master。")]),t._m(11),e("p",[t._v("查看远程库的信息")]),e("p",[t._v("git remote -v  查看远程库更加详细的信息")]),t._m(12),e("p",[t._v("添加远程库。")]),t._m(13),e("p",[t._v("删除远程库。")]),t._m(14),e("p",[t._v("git push  负责将你的变更上传到指定的远程仓库，并在远程仓库上合并你的新提交记录。")]),e("p",[t._v("git push origin master   切到本地仓库中的master分支，获取所有的提交，再到远程仓库origin中找到master分支，将远程仓库中没有的提交记录都添加上去。")]),e("p",[t._v("git push origin dev  将dev分支推送到远程库对应的远程分支上")]),t._m(15),e("p",[t._v("第一次推送master分支的所有内容。之后提交就可以用 git push origin master")]),t._m(16),e("p",[t._v("git merge ${分支名}  需要先通过 git checkout master 切换到主分支，再通过git merge ${分支名} 将该分支合并到主分支")]),e("p",[t._v('git merge --no-ff -m "merge with no-ff" dev   --no-ff参数，表示禁用Fast forward（合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息，如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit）。')]),t._m(17),e("p",[t._v("git rebase ${目标分支} ${将某个分支}  合并分支")]),e("p",[t._v("git rebase -i HEAD~4  ui界面调整最近4次的提交记录")]),t._m(18),e("p",[t._v("git cherry-pick <提交号>...   如果你想将一些提交复制到当前所在的位置（HEAD）下面的话， Cherry-pick 是最直接的方式了。")]),t._m(19),e("p",[t._v("永久地将某个特定的提交命名为里程碑，然后就可以像分支一样引用了，git tag 查看所有标签")]),e("p",[t._v("git tag v1  在当前分支上面加上标签v1")]),e("p",[t._v("git tag v1 ${commit id}  我们将这个标签命名为 v1，并且明确地让它指向提交记录 ${commit id}，如果你不指定提交记录，Git 会用 HEAD 所指向的位置。")]),e("p",[t._v('git tag -a v0.1 -m "version 0.1 released" 1094adb   创建带有说明的标签，用-a指定标签名，-m指定说明文字')]),e("p",[t._v("git show v1  查看标签信息")]),e("p",[t._v("git tag -d v0.1  删除标签")]),e("p",[t._v("git push origin v1  将tag推送到远程库")]),e("p",[t._v("git push origin --tags  一次性推送全部尚未推送到远程的本地标签")]),e("p",[t._v("git push origin :refs/tags/${tagname}  可以删除一个远程标签。")]),t._m(20),e("p",[t._v("git describe   由于标签在代码库中起着“锚点”的作用，Git 还为此专门设计了一个命令用来描述离你最近的锚点（也就是标签），它就是 git describe！")]),e("p",[t._v("git describe ${ref}   ${ref} 可以是任何能被 Git 识别成提交记录的引用，如果你没有指定的话，Git 会以你目前所检出的位置（HEAD）。")]),t._m(21),e("p",[t._v("git bisect  一个查找产生 Bug 的提交记录的指令")]),t._m(22),e("p",[t._v("git fetch 完成了仅有的但是很重要的两步:")]),t._m(23),e("p",[t._v("git fetch 实际上将本地仓库中的远程分支更新成了远程仓库相应分支最新的状态。")]),t._m(24),e("p",[t._v("git pull ===>（等价于） git fetch; git merge origin/master")]),e("p",[t._v("git pull --rebase  ===>（等价于） git fetch; git rebase origin/master")]),t._m(25),e("p",[t._v("把当前工作现场储藏起来，等以后恢复现场后继续工作。")]),e("p",[t._v("git stash list  所有储藏起来的工作现场。")]),e("p",[t._v("恢复stash，有两个办法：")]),e("p",[t._v("一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；")]),e("p",[t._v("另一种方式是用git stash pop，恢复的同时把stash内容也删了")]),e("p",[t._v("多人协作的工作模式通常是这样：")]),t._m(26),t._m(27)])},[function(){var t=this.$createElement,i=this._self._c||t;return i("h1",{attrs:{id:"git"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[this._v("#")]),this._v(" git")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-init"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-init","aria-hidden":"true"}},[this._v("#")]),this._v(" git init")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-add-file"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-add-file","aria-hidden":"true"}},[this._v("#")]),this._v(" git add ${file}")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-status"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-status","aria-hidden":"true"}},[this._v("#")]),this._v(" git status")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-diff-file"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-diff-file","aria-hidden":"true"}},[this._v("#")]),this._v(" git diff ${file}")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-commit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-commit","aria-hidden":"true"}},[this._v("#")]),this._v(" git Commit")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h3",{attrs:{id:"git-commit-m-message"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-m-message","aria-hidden":"true"}},[this._v("#")]),this._v(" git commit -m ${message}")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-log"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-log","aria-hidden":"true"}},[this._v("#")]),this._v(" git log")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-reset"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-reset","aria-hidden":"true"}},[this._v("#")]),this._v(" git reset")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-branch"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-branch","aria-hidden":"true"}},[this._v("#")]),this._v(" git branch")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-checkout"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout","aria-hidden":"true"}},[this._v("#")]),this._v(" git checkout")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-remote"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-remote","aria-hidden":"true"}},[this._v("#")]),this._v(" git remote")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h3",{attrs:{id:"git-remote-add-origin"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-add-origin","aria-hidden":"true"}},[this._v("#")]),this._v(" git remote add origin")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h3",{attrs:{id:"git-remote-rm-origin"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-rm-origin","aria-hidden":"true"}},[this._v("#")]),this._v(" git remote rm origin")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-push"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-push","aria-hidden":"true"}},[this._v("#")]),this._v(" git push")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h3",{attrs:{id:"git-push-u-origin-master"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-push-u-origin-master","aria-hidden":"true"}},[this._v("#")]),this._v(" git push -u origin master")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-merge"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-merge","aria-hidden":"true"}},[this._v("#")]),this._v(" git merge")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-rebase"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase","aria-hidden":"true"}},[this._v("#")]),this._v(" git rebase")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-cherry-pick"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick","aria-hidden":"true"}},[this._v("#")]),this._v(" git cherry-pick")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-tag"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-tag","aria-hidden":"true"}},[this._v("#")]),this._v(" git tag")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-describe"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-describe","aria-hidden":"true"}},[this._v("#")]),this._v(" git describe")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-bisect"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-bisect","aria-hidden":"true"}},[this._v("#")]),this._v(" git bisect")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-fetch"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch","aria-hidden":"true"}},[this._v("#")]),this._v(" git fetch")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ol",[i("li",[this._v("从远程仓库下载本地仓库中缺失的提交记录")]),i("li",[this._v("更新远程分支指针(如 origin/master)")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-pull"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-pull","aria-hidden":"true"}},[this._v("#")]),this._v(" git pull")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git-stash"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-stash","aria-hidden":"true"}},[this._v("#")]),this._v(" git stash")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ol",[i("li",[this._v("首先，可以试图用git push origin ${branch-name} 推送自己的修改；")]),i("li",[this._v("如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；")]),i("li",[this._v("如果合并有冲突，则解决冲突，并在本地提交；")]),i("li",[this._v("没有冲突或者解决掉冲突后，再用git push origin ${branch-name}推送就能成功！")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("p",[i("strong",[this._v(".gitignore")]),this._v(" 文件，把要忽略的文件名填进去，Git就会自动忽略这些文件。")])}],!1,null,null,null);i.default=a.exports}}]);